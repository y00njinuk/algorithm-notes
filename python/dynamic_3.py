'''
문제(1로 만들기)
- 정수 X가 주어졌을 때, 정수 X에 사용할 수 있는 연산은 다음과 같이 4가지 입니다.
    1. X가 5로 나누어 떨어지면, 5로 나눕니다.
    2. X가 3으로 나누어 떨어지면, 3으로 나눕니다.
    3. X가 2로 나누어 떨어지면, 2로 나눕니다.
    4. X에서 1을 뺍니다.
- 정수 X가 주어졌을 때, 연산 4개를 적절히 사용해서 값을 1로 만들고자 합니다. 연산을 사용하는 횟수의 최솟값을 출력하세요. 예를 들어 정수가 26이면 다음과 같이 계산해서 3번의 연산이 최솟값입니다.
'''
'''
해결방법
- ai = i를 1로 만들기 위한 최소 연산 횟수
- 점화식을 다음과 같이 정할 수 있다
    ai = min(ai-1, ai/2, ai/3, ai/5) + 1
'''

'''내가 푼 거'''
n = int(input())
a = [0] * (n+1)
a[1] = 0
a[2] = 1
a[3] = 1
a[4] = 2
a[5] = 1

for i in range(6, n+1):
    values = []
    if i % 2 == 0: values.append(a[i//2])
    if i % 3 == 0: values.append(a[i//3])
    if i % 5 == 0: values.append(a[i//5])
    values.append(a[i-1])
    a[i] = min(values) + 1

print(a[n])

'''정답'''
x = int(input())
d = [0] * 30001

for i in range(2, x+1):
    d[i] = d[i-1] + 1
    if i % 2 == 0 : d[i] = min(d[i], d[i//2] + 1)
    if i % 3 == 0 : d[i] = min(d[i], d[i//3] + 1)
    if i % 5 == 0 : d[i] = min(d[i], d[i//5] + 1)

print(d[x])
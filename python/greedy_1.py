'''
그리디 알고리즘
1. 현재 상황에서 지금 당장 좋은 것만 고르는 방법
2. 그리디 해법은 정당성 분석이 중요하다.
-> 최적의 해를 구할 수 있는지 검토
'''

'''
문제 예시:
- 당신은 음식점의 계산을 도와주는 점원입니다. 카운터에는 거스름돈으로 사용할 500원, 100원, 50원, 10원짜리 동전이 무한히 존재한다고 가정합니다.
- 손님에게 거슬러 주어야할 돈이 N원일 때 거슬러 주어야 할 동전의 최소 개수를 구하세요. 단 거슬러 줘야 할 돈 N은 항상 10의 배수입니다.
'''

'''
해결 방법:
1. 최적의 해를 구하기 위해서는 가장 큰 화폐단위부터 돈을 거슬러준다.
-> 가지고 있는 동전 중에서 가장 큰 단위가 항상 작은 단위의 배수일 때만 가능
If, 800원을 거슬러주어야 하는데 화폐 단위가 500원, 400원, 100원이라면?
-> DP(Dinamic Programming)으로 풀어야한다.
2. N원을 거슬러 줘야할 때, 가장 먼저 500원으로 거슬러 줄 수 있을 만큼 거슬러준다.
'''

# N = 1,260
n = 1260
count = 0
array = [500, 100, 50, 10]
for coin in array:
    count += n // coin # 몫만 계산하기
    n %= coin

print(count)
